name: Build and Deploy

on: [push]

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2

      - name: Install Ruby
        uses: ruby/setup-ruby@v1
        with:
          bundler-cache: true

      - name: Ruby Version
        run: |
          ruby -v

      - name: Publish new notes
        run: |
          bundle exec ruby scripts/publish.rb > publish_output.txt
          if test -s "./publish_output.txt"; then
            git config user.name "h-lame.com deploy robot"
            git config user.email github-actions@github.com
            git add source/
            echo $'Publishing new notes\n' | cat - publish_output.txt | git commit -F -
            git push
          fi

      - name: Middleman Build
        run: |
          export TERM=xterm
          bundle exec middleman build -e production --verbose

      - name: Prepare Release Asset
        if: ${{ success() && github.ref == 'refs/heads/main' }}
        run: |
          tar -cf h-lame.com.tar public
          bzip2 h-lame.com.tar

      - name: Delete old release assets
        if: ${{ success() && github.ref_name == 'main' }}
        uses: mknejp/delete-release-assets@v1
        with:
          token: ${{ github.token }}
          tag: deploy
          fail-if-no-assets: false
          assets: h-lame.com.tar.bz2

      - name: Upload Release Asset
        if: ${{ success() && github.ref_name == 'main' }}
        id: upload-release-asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: https://uploads.github.com/repos/h-lame/h-lame.com/releases/37054526/assets{?name,label}
          asset_path: ./h-lame.com.tar.bz2
          asset_name: h-lame.com.tar.bz2
          asset_content_type: application/x-tar

      - name: Trigger deploy
        if: ${{ success() && github.ref_name == 'main' }}
        run: >
          curl http://webhooks.h-lame.com/deploy.cgi \
            -X POST \
            -H "Content-Type: application/x-www-form-urlencoded" \
            --data-urlencode "payload={\"actor\":\"${{ github.actor }}\",\"ref\":\"${{ github.ref }}\",\"state\":\"${{ job.status }}\"}"
